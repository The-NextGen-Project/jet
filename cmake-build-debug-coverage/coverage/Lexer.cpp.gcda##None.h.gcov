        -:    0:Source:C:/Users/Owner/3DOBJE~1/jet/import/nextgen/Support/None.h
        -:    0:Graph:C:\Users\Owner\3D Objects\jet\cmake-build-debug-coverage\CMakeFiles\jet.dir\lib\Lex\Lexer.cpp.gcno
        -:    0:Data:C:\Users\Owner\3D Objects\jet\cmake-build-debug-coverage\CMakeFiles\jet.dir\lib\Lex\Lexer.cpp.gcda
        -:    0:Runs:1
        -:    1:# ifndef NEXTGEN_NONE_H
        -:    2:# define NEXTGEN_NONE_H
        -:    3:# include "Panic.h"
        -:    4:
        -:    5:namespace nextgen { // Putting this in the global namespace
        -:    6:  enum class NoneValue { None = 1 };
        -:    7:  static constexpr NoneValue None = NoneValue::None;
        -:    8:
        -:    9:
        -:   10:  template<typename T, size_t N>
       99:   11:  constexpr size_t SizeOfArray(const T(&arr)[N]) {
       99:   12:    return N;
       99:   12-block  0
        -:   13:  }
        -:   14:
        -:   15:# define match(...) switch (pair(__VA_ARGS__))
        -:   16:# define group(...) case pair(__VA_ARGS__)
        -:   17:
        -:   18:#   ifdef BIT64
        -:   19:#       define SHIFT_PAIR 16
        -:   20:#   else
        -:   21:#       define SHIFT_PAIR 8
        -:   22:#   endif
        -:   23:
        -:   24:  template <typename Enum>
        -:   25:  constexpr int pair(Enum k1) { // STD NAMING
        -:   26:    return k1;
        -:   27:  }
        -:   28:
        -:   29:  template<typename Enum1, typename Enum2>
    #####:   30:  constexpr int pair(Enum1 k1, Enum2 k2) {
    #####:   31:    return ((k1 + k2) << SHIFT_PAIR) | (size_t)k2;
        -:   32:  }
        -:   33:
        -:   34:  template<typename Enum1, typename Enum2, typename Enum3>
        -:   35:  constexpr int pair(Enum1 k1, Enum2 k2, Enum3 k3) {
        -:   36:    return ((k1 + k2 + k3) << SHIFT_PAIR) | (k2 * k3);
        -:   37:  }
        -:   38:
        -:   39:  template<typename Enum1, typename Enum2, typename Enum3, typename Enum4>
        -:   40:  constexpr int pair(Enum1 k1, Enum2 k2, Enum3 k3, Enum4 k4) {
        -:   41:    return ((k1 + k2 + k3 + k4) << SHIFT_PAIR) | (k2 * k3 * k4);
        -:   42:  }
        -:   43:
        -:   44:
        -:   45:}
        -:   46:
        -:   47:# endif //NEXTGEN_NONE_H
